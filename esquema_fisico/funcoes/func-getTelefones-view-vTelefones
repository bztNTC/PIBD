/*
-- criação das tabelas e constraints
CREATE TABLE IF NOT EXISTS membro_academico(
    id SERIAL NOT NULL,
    identidade INTEGER NOT NULL, 
    nacionalidade varchar(20) NOT NULL,
    pais_de_residencia varchar(19) NOT NULL,
    nome_completo varchar(70) NOT NULL,
    data_nascimento DATE NOT NULL,
    nome_da_mae varchar(70),
    genero varchar(20),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS membro_academico_telefone(
    id SERIAL NOT NULL,
    membro_academico_id INT NOT NULL, /* Foreign key */
    ddi varchar(3),
    ddd varchar(3),
    numero varchar(15),
    PRIMARY KEY (id)
);

ALTER TABLE membro_academico_telefone
    ADD CONSTRAINT FK_membro_academico_id FOREIGN KEY (membro_academico_id) REFERENCES membro_academico (id);
	
CREATE TABLE IF NOT EXISTS aluno_especializacao(
    aluno_professor_isf_id INTEGER NOT NULL, 
    DataIngresso DATE NOT NULL,
    DataConclusao DATE,
    DiplomaFile VARCHAR(200),
    Titulacao VARCHAR(200),
    RegistroMinistrante VARCHAR(200),
    PRIMARY KEY (aluno_professor_isf_id)
);

CREATE TABLE IF NOT EXISTS aluno_professor_isf (
    membro_academico_id INTEGER,
    RA VARCHAR(15) NOT NULL,
    PRIMARY KEY (membro_academico_id)
);

ALTER TABLE aluno_professor_isf
    ADD CONSTRAINT FK_membro_academico FOREIGN KEY (membro_academico_id) REFERENCES membro_academico(id);

ALTER TABLE aluno_especializacao
        ADD CONSTRAINT FK_aluno_prof_id
            FOREIGN KEY (aluno_professor_isf_id)
            REFERENCES aluno_professor_isf(membro_academico_id); 

-- vTelefones (criei porque a que colocaram no github usa telefones da reitoria, mas deve ser do aluno_especializacao)
CREATE OR REPLACE VIEW vTelefones AS
SELECT
    mat.id AS telefone_id,
	mat.ddi,
    mat.ddd,
    mat.numero
FROM
	aluno_especializacao ae
LEFT JOIN
    membro_academico_telefone mat ON ae.aluno_professor_isf_id = mat.membro_academico_id;

-- inserção de dados fictícios
INSERT INTO membro_academico (identidade, nacionalidade, pais_de_residencia, nome_completo, data_nascimento, nome_da_mae, genero)
VALUES (123456, 'Brasileira', 'Brasil', 'João da Silva', '1990-01-15', 'Mario da Silva', 'Masculino'),
	   (89798789, 'Brasileira', 'Brasil', 'Filho de Algo', '1990-01-15', 'Oport da Silva', 'Masculino'),
	   (25223265, 'Brasileira', 'Brasil', 'Juliana Santos', '1987-02-28', 'Maria dos Santos', 'Feminino'),
	   (12312132, 'Alemã', 'Alemanha', 'Alexandra Zverev', '1975-12-31', 'Olga Zverev', 'Feminino'),
	   (25441232, 'Brasileira', 'Brasil', 'Ronaldo da Paz', '1966-11-11', 'Ronalda da Paz', 'Masculino'),
	   (44543213, 'Brasileira', 'Brasil', 'Júlia Maria Abençoada da Salvação', '1999-01-06', 'Ana Abençoada da Salvação', 'Feminino');

INSERT INTO membro_academico_telefone(membro_academico_id, ddi, ddd, numero)
VALUES (1, '+55', '13', '99856-5542'),
	   (2, '+55' ,'16', '99999-1234'),
	   (3, '+55' ,'11', '98745-9999'),
	   (4, '+49' ,'30', '45669-9999'),
	   (6, '+55', '85', '45654-2232'); 
	   
INSERT INTO aluno_professor_isf(membro_academico_id, RA)
VALUES (1, 769717),
	   (2, 769818),
	   (3, 769707),
	   (5, 123123),
	   (6, 223512);

INSERT INTO aluno_especializacao(aluno_professor_isf_id, DataIngresso, DataConclusao, DiplomaFile, Titulacao, RegistroMinistrante)
VALUES (1, '2021-08-09', '2021-12-16', 'arquivo do diploma graduação', 'titulação dele', 'registro de ministrante'),
       (2, '2012-12-12', '2013-12-12', 'arquivo do diploma aqui', 'super titulação muitas palavras', 'registro dele aqui'),
	   (3, '2018-11-02', '2022-10-22', 'arquivo do diplomaaa', 'titulação aquiii', 'registro de ministrante eee'),
	   (5, '2023-04-09', '2022-05-09', 'arq do dip', 'titulacione', 'registrinho');

-- verificando as inserções
select*from membro_academico_telefone;
select*from aluno_professor_isf;
select*from aluno_especializacao;
select*from vTelefones;
*/
-- criação da function
CREATE OR REPLACE FUNCTION getTelefones(id_aluno_especializacao INT) RETURNS TABLE (
    telefone_id INT,
    ddi VARCHAR(3),
    ddd VARCHAR(3),
    numero VARCHAR(15)
) AS $$
BEGIN
    RETURN QUERY (
        SELECT * FROM vTelefones t WHERE t.telefone_id = id_aluno_especializacao
    );
END;
$$ LANGUAGE plpgsql;

-- teste da function
-- SELECT * FROM getTelefones(2);
